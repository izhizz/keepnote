<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personal.keepnote.persistence.dao.RefUserTypeInfoMapper">
  <resultMap id="BaseResultMap" type="com.personal.keepnote.persistence.entity.RefUserTypeInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="money_flag" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type_flag" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="data_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="day_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="date_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type_id, money_flag, type_flag, price, data_time, day_time, date_time, 
    remark
  </sql>
  <select id="selectByExample" parameterType="com.personal.keepnote.persistence.entity.RefUserTypeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ref_user_type_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ref_user_type_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ref_user_type_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.personal.keepnote.persistence.entity.RefUserTypeInfoExample">
    delete from ref_user_type_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.personal.keepnote.persistence.entity.RefUserTypeInfo">
    insert into ref_user_type_info (id, user_id, type_id, 
      money_flag, type_flag, price, 
      data_time, day_time, date_time, 
      remark)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{moneyFlag,jdbcType=INTEGER}, #{typeFlag,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{dataTime,jdbcType=BIGINT}, #{dayTime,jdbcType=BIGINT}, #{dateTime,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.personal.keepnote.persistence.entity.RefUserTypeInfo">
    insert into ref_user_type_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="moneyFlag != null">
        money_flag,
      </if>
      <if test="typeFlag != null">
        type_flag,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="dataTime != null">
        data_time,
      </if>
      <if test="dayTime != null">
        day_time,
      </if>
      <if test="dateTime != null">
        date_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="moneyFlag != null">
        #{moneyFlag,jdbcType=INTEGER},
      </if>
      <if test="typeFlag != null">
        #{typeFlag,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="dataTime != null">
        #{dataTime,jdbcType=BIGINT},
      </if>
      <if test="dayTime != null">
        #{dayTime,jdbcType=BIGINT},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update ref_user_type_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.moneyFlag != null">
        money_flag = #{record.moneyFlag,jdbcType=INTEGER},
      </if>
      <if test="record.typeFlag != null">
        type_flag = #{record.typeFlag,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.dataTime != null">
        data_time = #{record.dataTime,jdbcType=BIGINT},
      </if>
      <if test="record.dayTime != null">
        day_time = #{record.dayTime,jdbcType=BIGINT},
      </if>
      <if test="record.dateTime != null">
        date_time = #{record.dateTime,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ref_user_type_info
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      money_flag = #{record.moneyFlag,jdbcType=INTEGER},
      type_flag = #{record.typeFlag,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      data_time = #{record.dataTime,jdbcType=BIGINT},
      day_time = #{record.dayTime,jdbcType=BIGINT},
      date_time = #{record.dateTime,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.personal.keepnote.persistence.entity.RefUserTypeInfo">
    update ref_user_type_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="moneyFlag != null">
        money_flag = #{moneyFlag,jdbcType=INTEGER},
      </if>
      <if test="typeFlag != null">
        type_flag = #{typeFlag,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="dataTime != null">
        data_time = #{dataTime,jdbcType=BIGINT},
      </if>
      <if test="dayTime != null">
        day_time = #{dayTime,jdbcType=BIGINT},
      </if>
      <if test="dateTime != null">
        date_time = #{dateTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.personal.keepnote.persistence.entity.RefUserTypeInfo">
    update ref_user_type_info
    set user_id = #{userId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      money_flag = #{moneyFlag,jdbcType=INTEGER},
      type_flag = #{typeFlag,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      data_time = #{dataTime,jdbcType=BIGINT},
      day_time = #{dayTime,jdbcType=BIGINT},
      date_time = #{dateTime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>