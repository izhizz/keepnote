<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personal.keepnote.persistence.dao.RefUserInformationMapper">
  <resultMap id="BaseResultMap" type="com.personal.keepnote.persistence.entity.RefUserInformation">
    <constructor>
      <arg column="send_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="recive_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="flag" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="send_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="reply_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="send_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reply_mark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    send_user_id, recive_user_id, price, flag, send_time, reply_time, send_remark, reply_mark
  </sql>
  <select id="selectByExample" parameterType="com.personal.keepnote.persistence.entity.RefUserInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ref_user_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.personal.keepnote.persistence.entity.RefUserInformationExample">
    delete from ref_user_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.personal.keepnote.persistence.entity.RefUserInformation">
    insert into ref_user_information (send_user_id, recive_user_id, price, 
      flag, send_time, reply_time, 
      send_remark, reply_mark)
    values (#{sendUserId,jdbcType=INTEGER}, #{reciveUserId,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{flag,jdbcType=INTEGER}, #{sendTime,jdbcType=BIGINT}, #{replyTime,jdbcType=BIGINT}, 
      #{sendRemark,jdbcType=VARCHAR}, #{replyMark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.personal.keepnote.persistence.entity.RefUserInformation">
    insert into ref_user_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sendUserId != null">
        send_user_id,
      </if>
      <if test="reciveUserId != null">
        recive_user_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="replyTime != null">
        reply_time,
      </if>
      <if test="sendRemark != null">
        send_remark,
      </if>
      <if test="replyMark != null">
        reply_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sendUserId != null">
        #{sendUserId,jdbcType=INTEGER},
      </if>
      <if test="reciveUserId != null">
        #{reciveUserId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=BIGINT},
      </if>
      <if test="replyTime != null">
        #{replyTime,jdbcType=BIGINT},
      </if>
      <if test="sendRemark != null">
        #{sendRemark,jdbcType=VARCHAR},
      </if>
      <if test="replyMark != null">
        #{replyMark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update ref_user_information
    <set>
      <if test="record.sendUserId != null">
        send_user_id = #{record.sendUserId,jdbcType=INTEGER},
      </if>
      <if test="record.reciveUserId != null">
        recive_user_id = #{record.reciveUserId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=BIGINT},
      </if>
      <if test="record.replyTime != null">
        reply_time = #{record.replyTime,jdbcType=BIGINT},
      </if>
      <if test="record.sendRemark != null">
        send_remark = #{record.sendRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.replyMark != null">
        reply_mark = #{record.replyMark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ref_user_information
    set send_user_id = #{record.sendUserId,jdbcType=INTEGER},
      recive_user_id = #{record.reciveUserId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      flag = #{record.flag,jdbcType=INTEGER},
      send_time = #{record.sendTime,jdbcType=BIGINT},
      reply_time = #{record.replyTime,jdbcType=BIGINT},
      send_remark = #{record.sendRemark,jdbcType=VARCHAR},
      reply_mark = #{record.replyMark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>